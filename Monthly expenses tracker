import matplotlib.pyplot as plt import csv
import os
List of expense categories categories = [
"Rent", "Utilities", "Groceries",
"Transportation", "Entertainment", "Healthcare", "Insurance", "Dining Out", "Education", 
"Miscellaneous"
Initialize dictionary expenses = {category: 
0.0 for category in categories}
csv_file = "expenses.csv"

def load_expenses():
if os.path.exists(csv_file):
with open(csv_file, mode='r') as file:
reader = csv.reader(file)
for row in reader:
category, amount = row
if category in expenses:
expenses[category] = float(amount)
def add_expense():
print("\nAdd Expense:")
for i, category in enumerate(categories, 1):
print(f"{i}. {category}")
try:
choice = int(input("Select category number (1-10): "))
if 1 <= choice <= 10:
amount = float(input(f"Enter amount for {categories[choice - 1]}: "))
expenses[categories[choice - 1]] += amount
save_expenses()  # Save after adding
else:
print("Invalid category selection!")
except ValueError:
print("Please enter valid numbers.")


ChatGPT
You said:
import matplotlib.pyplot as plt import csv import os  # List of expense categories categories = [     "Rent", "Utilities", "Groceries", "Transportation", "Entertainment",     "Healthcare", "Insurance", "Dining Out", "Education", "Miscellaneous" ]  # Initialize dictionary expenses = {category: 0.0 for category in categories} csv_file = "expenses.csv"  # Load expenses from CSV def load_expenses():     if os.path.exists(csv_file):         with open(csv_file, mode='r') as file:             reader = csv.reader(file)             for row in reader:                 category, amount = row                 if category in expenses:                     expenses[category] = float(amount)  # Save expenses to CSV def save_expenses():     with open(csv_file, mode='w', newline='') as file:         writer = csv.writer(file)         for category, amount in expenses.items():             writer.writerow([category, amount])  def add_expense():     print("\nAdd Expense:")     for i, category in enumerate(categories, 1):         print(f"{i}. {category}")     try:         choice = int(input("Select category number (1-10): "))         if 1 <= choice <= 10:             amount = float(input(f"Enter amount for {categories[choice - 1]}: "))             expenses[categories[choice - 1]] += amount             save_expenses()  # Save after adding         else:             print("Invalid category selection!")     except ValueError:         print("Please enter valid numbers.")  def show_expenses():     print("\nCurrent Monthly Expenses:")     for category, amount in expenses.items():         print(f"{category}: ‚Çπ{amount:.2f}")     print(f"\nTotal Monthly Expense: ‚Çπ{sum(expenses.values()):.2f}")  def plot_expenses():     non_zero_expenses = {k: v for k, v in expenses.items() if v > 0}     if not non_zero_expenses:         print("\nNo expenses to display in the chart!")         return      labels = non_zero_expenses.keys()     sizes = non_zero_expenses.values()      plt.figure(figsize=(8, 6))     plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=140)     plt.title("Monthly Expense Distribution")     plt.axis('equal')     plt.show()  def main():     load_expenses()  # Load data at start     while True:         print("\nExpense Tracker Menu")         print("1. Add Expense")         print("2. Show Expenses")         print("3. Plot Expense Chart")         print("4. Exit")         choice = input("Enter your choice (1-4): ")          if choice == '1':             add_expense()         elif choice == '2':             show_expenses()         elif choice == '3':             plot_expenses()         elif choice == '4':             print("Exiting Expense Tracker. Goodbye!")             break         else:             print("Invalid choice! Please try again.")  if __name__ == "__main__":     main(): divide the given code
ChatGPT said:
Got it üëç ‚Äî you want to divide your Python expense tracker code into separate logical parts (modules) for better organization and readability.

Let‚Äôs split it cleanly into four files:

üóÇ File 1 ‚Äî main.py
üëâ Handles the menu and program flow.

from expense_manager import add_expense, show_expenses, plot_expenses
from storage import load_expenses

def main():
    load_expenses()  # Load data at start
    while True:
        print("\nExpense Tracker Menu")
        print("1. Add Expense")
        print("2. Show Expenses")
        print("3. Plot Expense Chart")
        print("4. Exit")
        choice = input("Enter your choice (1-4): ")

        if choice == '1':
            add_expense()
        elif choice == '2':
            show_expenses()
        elif choice == '3':
            plot_expenses()
        elif choice == '4':
            print("Exiting Expense Tracker. Goodbye!")
            break
        else:
            print("Invalid choice! Please try again.")

if __name__ == "__main__":
    main()
üóÇ File 2 ‚Äî data.py
üëâ Stores all global data and categories.

# data.py

categories = [
    "Rent", "Utilities", "Groceries", "Transportation", "Entertainment",
    "Healthcare", "Insurance", "Dining Out", "Education", "Miscellaneous"
]

# Initialize dictionary for expenses
expenses = {category: 0.0 for category in categories}

# CSV file name
csv_file = "expenses.csv"
üóÇ File 3 ‚Äî storage.py
üëâ Handles reading and writing CSV.

# storage.py

import csv
import os
from data import expenses, csv_file

def load_expenses():
    """Load expenses from CSV file"""
    if os.path.exists(csv_file):
        with open(csv_file, mode='r') as file:
            reader = csv.reader(file)
            for row in reader:
                category, amount = row
                if category in expenses:
                    expenses[category] = float(amount)

def save_expenses():
    """Save expenses to CSV file"""
    with open(csv_file, mode='w', newline='') as file:
        writer = csv.writer(file)
        for category, amount in expenses.items():
            writer.writerow([category, amount])
üóÇ File 4 ‚Äî expense_manager.py
üëâ Handles user interaction, adding, viewing, and plotting expenses.

# expense_manager.py

import matplotlib.pyplot as plt
from data import categories, expenses
from storage import save_expenses

def add_expense():
    print("\nAdd Expense:")
    for i, category in enumerate(categories, 1):
        print(f"{i}. {category}")
    try:
        choice = int(input("Select category number (1-10): "))
        if 1 <= choice <= 10:
            amount = float(input(f"Enter amount for {categories[choice - 1]}: "))
            expenses[categories[choice - 1]] += amount
            save_expenses()  # Save after adding
        else:
            print("Invalid category selection!")
    except ValueError:
        print("Please enter valid numbers.")

def show_expenses():
    print("\nCurrent Monthly Expenses:")
    for category, amount in expenses.items():
        print(f"{category}: ‚Çπ{amount:.2f}")
    print(f"\nTotal Monthly Expense: ‚Çπ{sum(expenses.values()):.2f}")

def plot_expenses():
    non_zero_expenses = {k: v for k, v in expenses.items() if v > 0}
    if not non_zero_expenses:
        print("\nNo expenses to display in the chart!")
        return

    labels = non_zero_expenses.keys()
    sizes = non_zero_expenses.values()

    plt.figure(figsize=(8, 6))
    plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=140)
    plt.title("Monthly Expense Distribution")
    plt.axis('equal')
    plt.show()
